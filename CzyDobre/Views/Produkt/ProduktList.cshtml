@model List<CzyDobre.Models.AspNetProduct>
@using CzyDobre.Models
@{
    ViewBag.Title = "ProduktList";
    Layout = "~/Views/Shared/_LayoutWide.cshtml";
    DBEntities db = new DBEntities();
}
<div class="role-div">
    <h2 style="text-align: center;">Lista produktów</h2>
    <div style="text-align: center;">@Html.Partial("_Notifications")</div>
    <hr />
    <div class="table">
        <table id="produkty" class="table table-bordered table-hover display">
            <thead>
                <tr class="table-role">
                    <th>ID produktu</th>
                    <th>Nazwa kategorii</th>
                    <th>Nazwa miejsca</th>
                    <th>Nazwa produktu</th>
                    <th>Opis produktu</th>
                    <th>Dodał</th>
                    <th>Zdjęcie</th>
                    <th>Weryfikacja</th>
                    <th>Akcja</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Id_Product</td>
                        <td>
                            @{ 
                                var wynikKategoria = db.AspNetCategories.Where(u => u.Id_Category == item.Id_Category).Select(u => u.CategoryName).FirstOrDefault();
                            }
                            @wynikKategoria
                        </td>
                        <td>
                            @{
                                var wynikMiejsce = db.AspNetPlaces.Where(u => u.Id_Place == item.Id_Place).Select(u => u.PlaceName).FirstOrDefault();
                            }
                            @wynikMiejsce                       
                        </td>
                        <td>@item.ProductName</td>
                        <td>@item.ProductDescription</td>
                        <td>
                            @{
                                var wynikKto = db.AspNetUsers.Where(u => u.Id == item.Who).Select(u => u.NickName).FirstOrDefault();
                            }
                            @wynikKto<br />
                            @item.Who
                        </td>
                        <td>
                            @{
                                string brakZdjecia = "https://res.cloudinary.com/czydobre-pl/image/upload/v1639157376/CzyDobre-www/Brak-zdjecia_fnfpal.png";
                                string urlCzydobre = "https://res.cloudinary.com/czydobre-pl/image/upload/v1639154117/CzyDobre-images/";
                                var wynikZdjecieUrl = db.AspNetImages.Where(u => u.Id_Product == item.Id_Product).Select(u => u.Url).FirstOrDefault();
                                var url = urlCzydobre + wynikZdjecieUrl;
                            }
                            @if (wynikZdjecieUrl != null && wynikZdjecieUrl != "")
                            {
                                <img src="@url" alt="Zdjęcie produktu" width="200" height="200">                      
                            }
                            else
                            {
                                <img src="@brakZdjecia" alt="Brak zdjęcia produktu" width="200" height="200">
                            }
                        </td>
                        @if (item.CzyDobre == true)
                        {
                            <td>Tak ✔️ </td>
                        }
                        else if(item.Objections != null && item.CzyDobre == false)
                        {
                            <td>Nie ❌<br />Zastrzeżenie: @item.Objections</td>
                        }
                        else 
                        {
                            <td>Nie ❌</td>                        
                        }
                    <td>
                        @if (item.CzyDobre == false && item.Objections == null)
                        {
                            @Html.ActionLink("Zatwierdź produkt", "ConfirmProdukt", "Produkt", new { idProduct = item.Id_Product, idCategory = item.Id_Category, idPlace = item.Id_Place, productDescription = item.ProductDescription, productName = item.ProductName, opinionCounter = item.Opinion_Counter, avarageTaste = item.AvarageTaste, avarageService = item.AvarageService, avarageIngredients = item.AvarageIngredients, who = item.Who, uniqName = item.UniqName, czyDobre = item.CzyDobre, objections = item.Objections }, new { @class = "btn btn-primary", onclick = "return confirm('Czy na pewno chcesz ZATWIERDŹIĆ produkt?');" })
                            <hr />
                            @Html.ActionLink("Dodaj zastrzeżenie", "Objections", "Produkt", new { item.Id_Product, item.Id_Category, item.Id_Place, item.ProductDescription, item.ProductName, item.Opinion_Counter, item.AvarageTaste, item.AvarageService, item.AvarageIngredients, item.Who, item.UniqName, item.CzyDobre, item.Objections }, new { @class = "btn btn-warning" })
                        }
                        else if (item.CzyDobre == false && item.Objections != null)
                        {
                            @Html.ActionLink("Zatwierdź produkt", "ConfirmProdukt", "Produkt", new { idProduct = item.Id_Product, idCategory = item.Id_Category, idPlace = item.Id_Place, productDescription = item.ProductDescription, productName = item.ProductName, opinionCounter = item.Opinion_Counter, avarageTaste = item.AvarageTaste, avarageService = item.AvarageService, avarageIngredients = item.AvarageIngredients, who = item.Who, uniqName = item.UniqName, czyDobre = item.CzyDobre, objections = item.Objections }, new { @class = "btn btn-primary", onclick = "return confirm('Czy na pewno chcesz ZATWIERDŹIĆ produkt?');" })
                            <hr />
                            @Html.ActionLink("Edytuj zastrzeżenie", "Objections", "Produkt", new { item.Id_Product, item.Id_Category, item.Id_Place, item.ProductDescription, item.ProductName, item.Opinion_Counter, item.AvarageTaste, item.AvarageService, item.AvarageIngredients, item.Who, item.UniqName, item.CzyDobre, item.Objections }, new { @class = "btn btn-warning" })
                        }
                        else
                        {
                            @Html.ActionLink("Cofnij zatwierdzenie", "BackConfirmProdukt", "Produkt", new { idProduct = item.Id_Product, idCategory = item.Id_Category, idPlace = item.Id_Place, productDescription = item.ProductDescription, productName = item.ProductName, opinionCounter = item.Opinion_Counter, avarageTaste = item.AvarageTaste, avarageService = item.AvarageService, avarageIngredients = item.AvarageIngredients, who = item.Who, uniqName = item.UniqName, czyDobre = item.CzyDobre, objections = item.Objections }, new { @class = "btn btn-primary", onclick = "return confirm('Czy na pewno chcesz COFNĄĆ ZATWIERDZENIE produktu?');" })
                        }
                        <hr />
                        @Html.ActionLink("Usuń produkt", "Delete", "Produkt", new { idProdukt = item.Id_Product, nazwaProduktu = item.ProductName, imageUrl = wynikZdjecieUrl }, new { @class = "btn btn-danger", onclick = "return confirm('Czy na pewno chcesz PERMANENTNIE USUNĄĆ produkt oraz związane z nim opinie?');" })
                    </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#produkty').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.11.3/i18n/pl.json"
                }
            });
        });
    </script>
}