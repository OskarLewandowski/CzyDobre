@{
    ViewBag.Title = "Opinie";
    Layout = "~/Views/Shared/_Layout.cshtml";


    RouteValueDictionary routeValues = new RouteValueDictionary(ViewContext.RouteData.Values);
    foreach (string key in Request.QueryString.Keys)
    {
        routeValues[key] = Request.QueryString[key].ToString();
    }
    RouteValueDictionary filterValues = new RouteValueDictionary(ViewContext.RouteData.Values);
    foreach (string key in Request.QueryString.Keys)
    {
        filterValues[key] = Request.QueryString[key].ToString();
    }

    bool areFiltersApplied = false;
    if (routeValues["filtr1"] != null || routeValues["filtr2"] != null || routeValues["filtr3"] != null)
    {
        areFiltersApplied = true;
    }
}

<div class="row border-bottom justify-content-between" style="margin-top:60px;">
    <div class="col-12 col-sm-6 col-lg-4 border border-top-0">
        <div class="mb-2" data-toggle="collapse" href="#filters" role="button" aria-expanded="@(areFiltersApplied ? "true" : "false")" aria-controls="filters">
            <span class="font-weight-bold">Filtrowanie</span>
            <span class="fa fa-angle-down"></span>
        </div>
        <div class="collapse row @(areFiltersApplied ? "show" : "")" id="filters">
            <div class="col-12 col-lg-8">
                <div class="col px-1 mb-1 d-flex justify-content-between">
                    <span class="d-inline text-right">Smak:</span>
                    <div class="d-flex flex-row-reverse align-items-center">

                        @for (int i = 4; i >= 0; i--)
                        {
                            filterValues["filtr1"] = i;
                            filterValues["page"] = 0;
                            if (routeValues["filtr1"] != null && routeValues["filtr1"].ToString() == i.ToString())
                            {
                                @Html.ActionLink(" ", "Opinion", "Home", filterValues, new Dictionary<string, object> { { "class", "radio-button active" } })
                            }
                            else
                            {
                                @Html.ActionLink(" ", "Opinion", "Home", filterValues, new Dictionary<string, object> { { "class", "radio-button" } })
                            }
                        }
                    </div>
                </div>
                <div class="col px-1 mb-1 d-flex justify-content-between">
                    <span class="d-inline text-right">Obsługa:</span>
                    <div class="d-flex flex-row-reverse align-items-center">
                        @{
                            filterValues = new RouteValueDictionary(ViewContext.RouteData.Values);
                            foreach (string key in Request.QueryString.Keys)
                            {
                                filterValues[key] = Request.QueryString[key].ToString();
                            }}
                        @for (int i = 4; i >= 0; i--)
                        {
                            filterValues["filtr2"] = i;
                            filterValues["page"] = 0;
                            if (routeValues["filtr2"] != null && routeValues["filtr2"].ToString() == i.ToString())
                            {
                                @Html.ActionLink(" ", "Opinion", "Home", filterValues, new Dictionary<string, object> { { "class", "radio-button active" } })
                            }
                            else
                            {
                                @Html.ActionLink(" ", "Opinion", "Home", filterValues, new Dictionary<string, object> { { "class", "radio-button" } })
                            }
                        }
                    </div>
                </div>
                <div class="col px-1 mb-1 d-flex justify-content-between">
                    <span class="d-inline text-right">Cena:</span>
                    <div class="d-flex flex-row-reverse align-items-center">
                        @{
                            filterValues = new RouteValueDictionary(ViewContext.RouteData.Values);
                            foreach (string key in Request.QueryString.Keys)
                            {
                                filterValues[key] = Request.QueryString[key].ToString();
                            }}
                        @for (int i = 4; i >= 0; i--)
                        {
                            filterValues["filtr3"] = i;
                            filterValues["page"] = 0;
                            if (routeValues["filtr3"] != null && routeValues["filtr3"].ToString() == i.ToString())
                            {
                                @Html.ActionLink(" ", "Opinion", "Home", filterValues, new Dictionary<string, object> { { "class", "radio-button active" } })
                            }
                            else
                            {
                                @Html.ActionLink(" ", "Opinion", "Home", filterValues, new Dictionary<string, object> { { "class", "radio-button" } })
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-12 col-lg-4 d-flex justify-content-center align-items-center">
                @Html.ActionLink("RESET", "Opinion", "Home", null, new { @class = "btn btn-info my-2" })
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-lg-4 border border-top-0">
        <div class="mb-2" data-toggle="collapse" href="#sorting" role="button" aria-expanded="false" aria-controls="sorting">
            <span class="font-weight-bold">Sortowanie</span>
            <span class="fa fa-angle-down"></span>
        </div>
        <div class="collapse" id="sorting">
            <div class="">
                @{routeValues["id"] = 1;}
                @Html.ActionLink("A-Z", "Opinion", "Home", routeValues, new Dictionary<string, object> { { "class", "d-block col mb-1 text-reset" } })
                @{routeValues["id"] = 2;}
                @Html.ActionLink("Z-A", "Opinion", "Home", routeValues, new Dictionary<string, object> { { "class", "d-block col mb-1 text-reset" } })
                @{routeValues["id"] = 3;}
                @Html.ActionLink("Najpopularniejsze", "Opinion", "Home", routeValues, new Dictionary<string, object> { { "class", "d-block col mb-1 text-reset" } })
                @{routeValues["id"] = 4;}
                @Html.ActionLink("Ostatnio dodane", "Opinion", "Home", routeValues, new Dictionary<string, object> { { "class", "d-block col mb-1 text-reset" } })
            </div>
        </div>
    </div>
</div>
<div class="row">
    @{
        if (Model.Count > 0)
        {
            foreach (var Data in Model)
            {
                string link = "opinia/" + Data.RatingId.ToString();
                <div class="browse-card col-12 col-md-6 col-lg-4 p-2">
                    <div class="h-100 w-100 position-relative browse-card-anchor">
                        <h6 class="card-title text-center text-capitalize my-0 py-1">@Data.ProductName</h6>
                        <div class="card flex-column flex-sm-row flex-md-column flex-lg-row p-0 rounded-0">
                            <div class="browse-image-wrapper col-sm-9 col-md-12 col-lg-8 p-0">
                                @{
                                    if (Data.ImageUrls.Count > 0 && !String.IsNullOrEmpty(Data.ImageUrls[0]))
                                    {
                                        string temp = Data.ImageUrls[0];
                                        Data.ImageUrls[0] = "https://res.cloudinary.com/czydobre-pl/image/upload/v1636896902/CzyDobre-images/";
                                        Data.ImageUrls[0] += temp;
                                    }
                                    else
                                    {
                                        Data.ImageUrls.Add("https://via.placeholder.com/1080");
                                    }
                                }
                                <img src="@Url.Content(Data.ImageUrls[0])" />
                            </div>
                            <div class="p-2 col-sm-3 col-md-12 col-lg-4">
                                <div class="card-text row flex-row flex-sm-column flex-md-row flex-lg-column">
                                    <div class="text-center col-4 col-sm-12 col-md-4 col-lg-12 p-0">
                                        @{
                                            <label class="my-1 col-12">Smak</label>
                                            for (int i = 0; i < 5; i++)
                                            {
                                                if (i < Convert.ToInt32(Data.RateTaste))
                                                {
                                                    <span class="fa fa-star"></span>
                                                }
                                                else
                                                {
                                                    <span class="fa fa-star-o"></span>
                                                }
                                            }
                                        }
                                    </div>
                                    <div class="text-center col-4 col-sm-12 col-md-4 col-lg-12 p-0">
                                        @{
                                            <label class="my-1 col-12">Obsługa</label>
                                            for (int i = 0; i < 5; i++)
                                            {
                                                if (i < Convert.ToInt32(Data.RateService))
                                                {
                                                    <span class="fa fa-star"></span>
                                                }
                                                else
                                                {
                                                    <span class="fa fa-star-o"></span>
                                                }
                                            }
                                        }
                                    </div>
                                    <div class="text-center col-4 col-sm-12 col-md-4 col-lg-12 p-0">
                                        @{
                                            <label class="my-1 col-12">Cena</label>
                                            for (int i = 0; i < 5; i++)
                                            {
                                                if (i < Convert.ToInt32(Data.RateIngredients))
                                                {
                                                    <span class="fa fa-star"></span>
                                                }
                                                else
                                                {
                                                    <span class="fa fa-star-o"></span>
                                                }
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <a href="@Url.Action(link)" class="stretched-link"></a>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col p-3 border-top">
                <p class="lead text-center" style="margin-top:52px;">Nie znaleziono wyników wyszukiwania o podanych kryteriach.</p>
                @Html.ActionLink("Wróć", "Opinion", "Home", null, new { @class = "btn btn-info d-block m-auto mt-2" })
            </div>
        }
    }
</div>
@if (ViewBag.NumberOfPages > 1)
{
    foreach (string key in Request.QueryString.Keys)
    {
        routeValues[key] = Request.QueryString[key].ToString();
    }
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item">
                @{routeValues["page"] = 0;}
                @Html.ActionLink("Pierwsza", "Opinion", "Home", routeValues, new Dictionary<string, object> { { "class", "page-link" } })
            </li>
            @{
                int startPage = Math.Max(ViewBag.ActivePage - 2, 0);
                int endPage = Math.Min(startPage + 4, ViewBag.NumberOfPages - 1);
                if (endPage - startPage < 4)
                {
                    startPage = Math.Max(ViewBag.ActivePage + (-6 + (endPage - startPage)), 0);
                }

                for (int i = startPage; i <= endPage; i++)
                {
                    string label = (i + 1).ToString();
                    routeValues["page"] = i;
                    if (ViewBag.ActivePage == i)
                    {
                        <li class="page-item">@Html.ActionLink(label, "Opinion", "Home", routeValues, new Dictionary<string, object> { { "class", "page-link active btn-success" } })</li>
                    }
                    else
                    {
                        <li class="page-item">@Html.ActionLink(label, "Opinion", "Home", routeValues, new Dictionary<string, object> { { "class", "page-link" } })</li>
                    }
                }
            }
            <li class="page-item">
                @{routeValues["page"] = ViewBag.NumberOfPages - 1;}
                @Html.ActionLink("Ostatnia", "Opinion", "Home", routeValues, new Dictionary<string, object> { { "class", "page-link" } })
            </li>
        </ul>
    </nav>
}
